model User {
  id        String   @id @default(uuid())
  email     String   @unique
  name      String
  password  String
  isAdmin   Boolean  @default(false) // Вместо enum Role
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  // Связи
  createdGames Game[] @relation("GameCreator")
  teams       TeamMember[]
  profile     UserProfile?
}

model UserProfile {
  id          String   @id @default(uuid())
  bio         String?
  avatarUrl   String?
  gamesPlayed Int      @default(0)
  gamesWon    Int      @default(0)
  
  // Связь с пользователем
  user        User     @relation(fields: [userId], references: [id])
  userId      String   @unique
}

model Permission {
  id          String        @id @default(uuid())
  name        String        @unique
  description String?
  
  // Связи
  rolePermissions RolePermission[]
}

model Role {
  id          String        @id @default(uuid())
  name        String        @unique
  description String?
  
  // Связи
  rolePermissions RolePermission[]
  userRoles      UserRole[]
}

model RolePermission {
  id           String     @id @default(uuid())
  
  // Связи
  role         Role       @relation(fields: [roleId], references: [id])
  roleId       String
  permission   Permission @relation(fields: [permissionId], references: [id])
  permissionId String
  
  @@unique([roleId, permissionId])
}

model UserRole {
  id        String   @id @default(uuid())
  
  // Связи
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  role      Role     @relation(fields: [roleId], references: [id])
  roleId    String
  
  @@unique([userId, roleId])
} 